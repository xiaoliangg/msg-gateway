diff --git a/node_modules/http-proxy/lib/http-proxy/passes/test22.js b/node_modules/http-proxy/lib/http-proxy/passes/test22.js
new file mode 100644
index 0000000..6096c94
--- /dev/null
+++ b/node_modules/http-proxy/lib/http-proxy/passes/test22.js
@@ -0,0 +1,3 @@
+module.exports = {
+    mm: new Map()
+};
diff --git a/node_modules/http-proxy/lib/http-proxy/passes/ws-incoming.js b/node_modules/http-proxy/lib/http-proxy/passes/ws-incoming.js
index 270f23f..9a18e6b 100644
--- a/node_modules/http-proxy/lib/http-proxy/passes/ws-incoming.js
+++ b/node_modules/http-proxy/lib/http-proxy/passes/ws-incoming.js
@@ -1,6 +1,8 @@
 var http   = require('http'),
     https  = require('https'),
-    common = require('../common');
+    common = require('../common'),
+    mm = require('./test22'),
+    url = require('url');
 
 /*!
  * Array of passes.
@@ -17,6 +19,7 @@ var http   = require('http'),
 
 
 module.exports = {
+
   /**
    * WebSocket requests must have the `GET` method and
    * the `upgrade:websocket` header
@@ -118,7 +121,8 @@ module.exports = {
     });
 
     proxyReq.on('upgrade', function(proxyRes, proxySocket, proxyHead) {
-      proxySocket.on('error', onOutgoingError);
+      // yl 目标服务断开的监听
+      proxySocket.on('error', onOutgoingError2);
 
       // Allow us to listen when the websocket has completed
       proxySocket.on('end', function () {
@@ -140,12 +144,20 @@ module.exports = {
       // Remark: Handle writing the headers to the socket when switching protocols
       // Also handles when a header is an array
       //
-      socket.write(createHttpHeader('HTTP/1.1 101 Switching Protocols', proxyRes.headers));
+      var parseObj = url.parse(req.url,true);
+      if(!mm.mm.get(parseObj.query.a1)){
+        socket.write(createHttpHeader('HTTP/1.1 101 Switching Protocols', proxyRes.headers)); // yltodo 二次执行时不知道为何报错
+      }
 
+      console.log('yl测试222');
       proxySocket.pipe(socket).pipe(proxySocket);
 
       server.emit('open', proxySocket);
       server.emit('proxySocket', proxySocket);  //DEPRECATED.
+
+      // 写入用户路由表
+      var parseObj = url.parse(req.url,true);
+      mm.mm.set(parseObj.query.a1,{req, socket, options, head,proxyReq,proxySocket});
     });
 
     return proxyReq.end(); // XXX: CHECK IF THIS IS THIS CORRECT
@@ -158,5 +170,13 @@ module.exports = {
       }
       socket.end();
     }
+
+    function onOutgoingError2(err) {
+      if (clb) {
+        clb(err, req, socket);
+      } else {
+        server.emit('connectOtherNode', proxyReq, req, socket, options, head);
+      }
+    }
   }
 };
diff --git a/node_modules/http-proxy/renovate.json b/node_modules/http-proxy/renovate.json
index fc1d2aa..c8326a1 100644
--- a/node_modules/http-proxy/renovate.json
+++ b/node_modules/http-proxy/renovate.json
@@ -1,3 +1,4 @@
+
 {
   "platform": "github",
   "autodiscover": false,
